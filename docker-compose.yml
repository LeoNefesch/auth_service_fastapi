services:
  db:
    image: postgres:17
    container_name: postgres_auth_db
    restart: always
    env_file:
      - .env.docker
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  redis:
    image: redis:7
    container_name: redis_auth
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - redis_data:/data
    restart: always
    networks:
      - app_network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: auth_app
    env_file:
      - .env.docker
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: [ "./entry/app-entry.sh" ]
    ports:
      - 8000:8000
    healthcheck:
      test: [ "CMD-SHELL", "curl --silent --fail http://localhost:8000/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: on-failure:5
    networks:
      - app_network

volumes:
  postgres_data:
  redis_data:

networks:
  app_network:
    driver: bridge
